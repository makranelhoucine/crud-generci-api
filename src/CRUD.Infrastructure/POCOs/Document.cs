// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    ///<summary>
    /// Product maintenance documents.
    ///</summary>
    public partial class Document
    {

        ///<summary>
        /// Primary key for Document records.
        ///</summary>
       public System.Data.Entity.Hierarchy.HierarchyId DocumentNode { get; set; }

        ///<summary>
        /// Depth in the document hierarchy.
        ///</summary>
       public short? DocumentLevel { get; private set; }

        ///<summary>
        /// Title of the document.
        ///</summary>
       public string Title { get; set; }

        ///<summary>
        /// Employee who controls the document.  Foreign key to Employee.BusinessEntityID
        ///</summary>
       public int Owner { get; set; }

        ///<summary>
        /// 0 = This is a folder, 1 = This is a document.
        ///</summary>
       public bool FolderFlag { get; set; }

        ///<summary>
        /// File name of the document
        ///</summary>
       public string FileName { get; set; }

        ///<summary>
        /// File extension indicating the document type. For example, .doc or .txt.
        ///</summary>
       public string FileExtension { get; set; }

        ///<summary>
        /// Revision number of the document.
        ///</summary>
       public string Revision { get; set; }

        ///<summary>
        /// Engineering change approval number.
        ///</summary>
       public int ChangeNumber { get; set; }

        ///<summary>
        /// 1 = Pending approval, 2 = Approved, 3 = Obsolete
        ///</summary>
       public byte Status { get; set; }

        ///<summary>
        /// Document abstract.
        ///</summary>
       public string DocumentSummary { get; set; }

        ///<summary>
        /// Complete document.
        ///</summary>
       public byte[] Document_ { get; set; }

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Required for FileStream.
        ///</summary>
       public System.Guid Rowguid { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
       public System.DateTime ModifiedDate { get; set; }

        public ICollection<ProductDocument> ProductDocuments { get; set; }


        public Employee Employee { get; set; }

        public Document()
        {
            FolderFlag = false;
            ChangeNumber = 0;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            ProductDocuments = new List<ProductDocument>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
