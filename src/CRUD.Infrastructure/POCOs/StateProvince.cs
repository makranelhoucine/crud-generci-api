// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    ///<summary>
    /// State and province lookup table.
    ///</summary>
    public partial class StateProvince : IEntity<int>
    {

        ///<summary>
        /// Primary key for StateProvince records.
        ///</summary>
       public int Id { get; set; }

        ///<summary>
        /// ISO standard state or province code.
        ///</summary>
       public string StateProvinceCode { get; set; }

        ///<summary>
        /// ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.
        ///</summary>
       public string CountryRegionCode { get; set; }

        ///<summary>
        /// 0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
        ///</summary>
       public bool IsOnlyStateProvinceFlag { get; set; }

        ///<summary>
        /// State or province description.
        ///</summary>
       public string Name { get; set; }

        ///<summary>
        /// ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
        ///</summary>
       public int TerritoryId { get; set; }

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
       public System.Guid Rowguid { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
       public System.DateTime ModifiedDate { get; set; }

        public ICollection<Address> Addresses { get; set; }
        public ICollection<SalesTaxRate> SalesTaxRates { get; set; }


        public CountryRegion CountryRegion { get; set; }

        public SalesTerritory SalesTerritory { get; set; }

        public StateProvince()
        {
            IsOnlyStateProvinceFlag = true;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Addresses = new List<Address>();
            SalesTaxRates = new List<SalesTaxRate>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
