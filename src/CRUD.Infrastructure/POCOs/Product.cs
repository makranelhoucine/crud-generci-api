// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    ///<summary>
    /// Products sold or used in the manfacturing of sold products.
    ///</summary>
    public partial class Product : IEntity<int>
    {

        ///<summary>
        /// Primary key for Product records.
        ///</summary>
       public int Id { get; set; }

        ///<summary>
        /// Name of the product.
        ///</summary>
       public string Name { get; set; }

        ///<summary>
        /// Unique product identification number.
        ///</summary>
       public string ProductNumber { get; set; }

        ///<summary>
        /// 0 = Product is purchased, 1 = Product is manufactured in-house.
        ///</summary>
       public bool MakeFlag { get; set; }

        ///<summary>
        /// 0 = Product is not a salable item. 1 = Product is salable.
        ///</summary>
       public bool FinishedGoodsFlag { get; set; }

        ///<summary>
        /// Product color.
        ///</summary>
       public string Color { get; set; }

        ///<summary>
        /// Minimum inventory quantity.
        ///</summary>
       public short SafetyStockLevel { get; set; }

        ///<summary>
        /// Inventory level that triggers a purchase order or work order.
        ///</summary>
       public short ReorderPoint { get; set; }

        ///<summary>
        /// Standard cost of the product.
        ///</summary>
       public decimal StandardCost { get; set; }

        ///<summary>
        /// Selling price.
        ///</summary>
       public decimal ListPrice { get; set; }

        ///<summary>
        /// Product size.
        ///</summary>
       public string Size { get; set; }

        ///<summary>
        /// Unit of measure for Size column.
        ///</summary>
       public string SizeUnitMeasureCode { get; set; }

        ///<summary>
        /// Unit of measure for Weight column.
        ///</summary>
       public string WeightUnitMeasureCode { get; set; }

        ///<summary>
        /// Product weight.
        ///</summary>
       public decimal? Weight { get; set; }

        ///<summary>
        /// Number of days required to manufacture the product.
        ///</summary>
       public int DaysToManufacture { get; set; }

        ///<summary>
        /// R = Road, M = Mountain, T = Touring, S = Standard
        ///</summary>
       public string ProductLine { get; set; }

        ///<summary>
        /// H = High, M = Medium, L = Low
        ///</summary>
       public string Class { get; set; }

        ///<summary>
        /// W = Womens, M = Mens, U = Universal
        ///</summary>
       public string Style { get; set; }

        ///<summary>
        /// Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.
        ///</summary>
       public int? ProductSubcategoryId { get; set; }

        ///<summary>
        /// Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
        ///</summary>
       public int? ProductModelId { get; set; }

        ///<summary>
        /// Date the product was available for sale.
        ///</summary>
       public System.DateTime SellStartDate { get; set; }

        ///<summary>
        /// Date the product was no longer available for sale.
        ///</summary>
       public System.DateTime? SellEndDate { get; set; }

        ///<summary>
        /// Date the product was discontinued.
        ///</summary>
       public System.DateTime? DiscontinuedDate { get; set; }

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
       public System.Guid Rowguid { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
       public System.DateTime ModifiedDate { get; set; }

        public ICollection<BillOfMaterial> BillOfMaterials_ComponentId { get; set; }
        public ICollection<BillOfMaterial> BillOfMaterials_ProductAssemblyId { get; set; }
        public ICollection<ProductCostHistory> ProductCostHistories { get; set; }
        public ICollection<ProductDocument> ProductDocuments { get; set; }
        public ICollection<ProductInventory> ProductInventories { get; set; }
        public ICollection<ProductListPriceHistory> ProductListPriceHistories { get; set; }
        public ICollection<ProductProductPhoto> ProductProductPhotoes { get; set; }
        public ICollection<ProductReview> ProductReviews { get; set; }
        public ICollection<ProductVendor> ProductVendors { get; set; }
        public ICollection<PurchaseOrderDetail> PurchaseOrderDetails { get; set; }
        public ICollection<ShoppingCartItem> ShoppingCartItems { get; set; }
        public ICollection<SpecialOfferProduct> SpecialOfferProducts { get; set; }
        public ICollection<TransactionHistory> TransactionHistories { get; set; }
        public ICollection<WorkOrder> WorkOrders { get; set; }


        public ProductModel ProductModel { get; set; }

        public ProductSubcategory ProductSubcategory { get; set; }

        public UnitMeasure UnitMeasure_SizeUnitMeasureCode { get; set; }

        public UnitMeasure UnitMeasure_WeightUnitMeasureCode { get; set; }

        public Product()
        {
            MakeFlag = true;
            FinishedGoodsFlag = true;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            BillOfMaterials_ProductAssemblyId = new List<BillOfMaterial>();
            BillOfMaterials_ComponentId = new List<BillOfMaterial>();
            ProductCostHistories = new List<ProductCostHistory>();
            ProductDocuments = new List<ProductDocument>();
            ProductInventories = new List<ProductInventory>();
            ProductListPriceHistories = new List<ProductListPriceHistory>();
            ProductProductPhotoes = new List<ProductProductPhoto>();
            ProductReviews = new List<ProductReview>();
            ProductVendors = new List<ProductVendor>();
            PurchaseOrderDetails = new List<PurchaseOrderDetail>();
            ShoppingCartItems = new List<ShoppingCartItem>();
            SpecialOfferProducts = new List<SpecialOfferProduct>();
            TransactionHistories = new List<TransactionHistory>();
            WorkOrders = new List<WorkOrder>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
