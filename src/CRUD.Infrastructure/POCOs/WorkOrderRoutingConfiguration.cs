// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    public partial class WorkOrderRoutingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WorkOrderRouting>
    {
        public WorkOrderRoutingConfiguration()
            : this("Production")
        {
        }

        public WorkOrderRoutingConfiguration(string schema)
        {
            ToTable("WorkOrderRouting", schema);
            HasKey(x => new { x.WorkOrderId, x.ProductId, x.OperationSequence });

            Property(x => x.WorkOrderId).HasColumnName(@"WorkOrderID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OperationSequence).HasColumnName(@"OperationSequence").HasColumnType("smallint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LocationId).HasColumnName(@"LocationID").HasColumnType("smallint").IsRequired();
            Property(x => x.ScheduledStartDate).HasColumnName(@"ScheduledStartDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ScheduledEndDate).HasColumnName(@"ScheduledEndDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ActualStartDate).HasColumnName(@"ActualStartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ActualResourceHrs).HasColumnName(@"ActualResourceHrs").HasColumnType("decimal").IsOptional().HasPrecision(9,4);
            Property(x => x.PlannedCost).HasColumnName(@"PlannedCost").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ActualCost).HasColumnName(@"ActualCost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            HasRequired(a => a.Location).WithMany(b => b.WorkOrderRoutings).HasForeignKey(c => c.LocationId).WillCascadeOnDelete(false);
            HasRequired(a => a.WorkOrder).WithMany(b => b.WorkOrderRoutings).HasForeignKey(c => c.WorkOrderId).WillCascadeOnDelete(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
