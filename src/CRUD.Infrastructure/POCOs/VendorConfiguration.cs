// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    public partial class VendorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Vendor>
    {
        public VendorConfiguration()
            : this("Purchasing")
        {
        }

        public VendorConfiguration(string schema)
        {
            ToTable("Vendor", schema);
            HasKey(x => x.BusinessEntityId);

            Property(x => x.BusinessEntityId).HasColumnName(@"BusinessEntityID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AccountNumber).HasColumnName(@"AccountNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(15);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreditRating).HasColumnName(@"CreditRating").HasColumnType("tinyint").IsRequired();
            Property(x => x.PreferredVendorStatus).HasColumnName(@"PreferredVendorStatus").HasColumnType("bit").IsRequired();
            Property(x => x.ActiveFlag).HasColumnName(@"ActiveFlag").HasColumnType("bit").IsRequired();
            Property(x => x.PurchasingWebServiceUrl).HasColumnName(@"PurchasingWebServiceURL").HasColumnType("nvarchar").IsOptional().HasMaxLength(1024);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            HasRequired(a => a.BusinessEntity).WithOptional(b => b.Vendor).WillCascadeOnDelete(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
