// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    ///<summary>
    /// Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
    ///</summary>
    public partial class DatabaseLog : IEntity<int>
    {

        ///<summary>
        /// Primary key for DatabaseLog records.
        ///</summary>
       public int Id { get; set; }

        ///<summary>
        /// The date and time the DDL change occurred.
        ///</summary>
       public System.DateTime PostTime { get; set; }

        ///<summary>
        /// The user who implemented the DDL change.
        ///</summary>
       public string DatabaseUser { get; set; }

        ///<summary>
        /// The type of DDL statement that was executed.
        ///</summary>
       public string Event { get; set; }

        ///<summary>
        /// The schema to which the changed object belongs.
        ///</summary>
       public string Schema { get; set; }

        ///<summary>
        /// The object that was changed by the DDL statment.
        ///</summary>
       public string Object { get; set; }

        ///<summary>
        /// The exact Transact-SQL statement that was executed.
        ///</summary>
       public string Tsql { get; set; }

        ///<summary>
        /// The raw XML data generated by database trigger.
        ///</summary>
       public string XmlEvent { get; set; }

        public DatabaseLog()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
