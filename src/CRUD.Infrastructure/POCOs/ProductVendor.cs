// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CRUD.Infrastructure.POCOs
{
    using System;
    using System.Collections.Generic;

    ///<summary>
    /// Cross-reference table mapping vendors with the products they supply.
    ///</summary>
    public partial class ProductVendor
    {

        ///<summary>
        /// Primary key. Foreign key to Product.ProductID.
        ///</summary>
       public int ProductId { get; set; }

        ///<summary>
        /// Primary key. Foreign key to Vendor.BusinessEntityID.
        ///</summary>
       public int BusinessEntityId { get; set; }

        ///<summary>
        /// The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
        ///</summary>
       public int AverageLeadTime { get; set; }

        ///<summary>
        /// The vendor&apos;s usual selling price.
        ///</summary>
       public decimal StandardPrice { get; set; }

        ///<summary>
        /// The selling price when last purchased.
        ///</summary>
       public decimal? LastReceiptCost { get; set; }

        ///<summary>
        /// Date the product was last received by the vendor.
        ///</summary>
       public System.DateTime? LastReceiptDate { get; set; }

        ///<summary>
        /// The maximum quantity that should be ordered.
        ///</summary>
       public int MinOrderQty { get; set; }

        ///<summary>
        /// The minimum quantity that should be ordered.
        ///</summary>
       public int MaxOrderQty { get; set; }

        ///<summary>
        /// The quantity currently on order.
        ///</summary>
       public int? OnOrderQty { get; set; }

        ///<summary>
        /// The product&apos;s unit of measure.
        ///</summary>
       public string UnitMeasureCode { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
       public System.DateTime ModifiedDate { get; set; }


        public Product Product { get; set; }

        public UnitMeasure UnitMeasure { get; set; }

        public Vendor Vendor { get; set; }

        public ProductVendor()
        {
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
